module.exports = {
	extends: [
		'xo/browser',
		'xo-react',
		'xo-typescript',
	],

	rules: {
		'capitalized-comments': 0,
		'@typescript-eslint/ban-types': 0,
		curly: ['error', 'multi-line'],
		'@typescript-eslint/comma-dangle': ['error', {
			arrays: 'always-multiline',
			objects: 'always-multiline',
			imports: 'always-multiline',
			exports: 'always-multiline',
			functions: 'always-multiline',
			enums: 'always-multiline',
			generics: 'always-multiline',
			tuples: 'always-multiline',
		}],
		'object-curly-spacing': ['error', 'always'],
		'react/sort-comp': ['error', {
			order: [
				'static-variables',
				'static-methods',
				'instance-variables',
				'lifecycle',
				'/^handle.+$/',
				'/^on.+$/',
				'getters',
				'setters',
				'/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/',
				'instance-methods',
				'everything-else',
				'rendering',
			],
			groups: {
				lifecycle: [
					'displayName',
					'propTypes',
					'contextTypes',
					'childContextTypes',
					'mixins',
					'statics',
					'defaultProps',
					'constructor',
					'getDefaultProps',
					'getInitialState',
					'state',
					'getChildContext',
					'getDerivedStateFromProps',
					'componentDidMount',
					'shouldComponentUpdate',
					'getSnapshotBeforeUpdate',
					'componentDidUpdate',
					'componentDidCatch',
					'componentWillUnmount',
				],
				rendering: [
					'/^render.+$/',
					'render',
				],
			},
		}],
		// camelcase: 'off',
		// 'no-use-before-define': 'off',
		// 'no-underscore-dangle': 'off',
		// 'no-bitwise': 'off',
		// 'no-restricted-syntax': 'off',
		// 'react/jsx-props-no-spreading': 'off',
		// 'react/no-array-index-key': 'off',
		// 'react/prop-types': 'off',
		// 'react/button-has-type': 'off',
		// 'react/forbid-prop-types': 'off',
		// 'react/jsx-filename-extension': 'off',
		// 'react/require-default-props': 'off',
		// 'react/destructuring-assignment': 'off',
		// 'import/no-extraneous-dependencies': 'off',
		// 'import/prefer-default-export': 'off',
		// 'import/extensions': 'off',
		// 'jsx-a11y/no-autofocus': 'off',
		// 'jsx-a11y/anchor-is-valid': 'off',
		// 'jsx-a11y/label-has-for': 'off',
		// 'jsx-a11y/label-has-associated-control': 'off',
	},
	overrides: [
		{
			files: '*.tsx',
			rules: {
				// use `react/sort-comp` instead
				'@typescript-eslint/member-ordering': 0,
			},
		},
		{
			files: '*.js',
			rules: {
				'@typescript-eslint/ban-ts-comment': 0,
				'@typescript-eslint/no-unsafe-assignment': 0,
				'@typescript-eslint/no-unsafe-call': 0,
				'@typescript-eslint/no-unsafe-member-access': 0,
				'@typescript-eslint/no-var-requires': 0,
			},
		},
	],
};
